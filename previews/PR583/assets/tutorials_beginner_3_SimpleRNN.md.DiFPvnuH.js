import { _ as _export_sfc, c as createElementBlock, o as openBlock, a3 as createStaticVNode } from "./chunks/framework.CIBeMeed.js";
const __pageData = JSON.parse('{"title":"Training a Simple LSTM","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/beginner/3_SimpleRNN.md","filePath":"tutorials/beginner/3_SimpleRNN.md","lastUpdated":null}');
const _sfc_main = { name: "tutorials/beginner/3_SimpleRNN.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="Training-a-Simple-LSTM" tabindex="-1">Training a Simple LSTM <a class="header-anchor" href="#Training-a-Simple-LSTM" aria-label="Permalink to &quot;Training a Simple LSTM {#Training-a-Simple-LSTM}&quot;">​</a></h1><p>In this tutorial we will go over using a recurrent neural network to classify clockwise and anticlockwise spirals. By the end of this tutorial you will be able to:</p><ol><li><p>Create custom Lux models.</p></li><li><p>Become familiar with the Lux recurrent neural network API.</p></li><li><p>Training using Optimisers.jl and Zygote.jl.</p></li></ol><h2 id="Package-Imports" tabindex="-1">Package Imports <a class="header-anchor" href="#Package-Imports" aria-label="Permalink to &quot;Package Imports {#Package-Imports}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ADTypes, Lux, LuxAMDGPU, LuxCUDA, JLD2, MLUtils, Optimisers, Zygote, Printf, Random,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Statistics</span></span></code></pre></div><h2 id="Dataset" tabindex="-1">Dataset <a class="header-anchor" href="#Dataset" aria-label="Permalink to &quot;Dataset {#Dataset}&quot;">​</a></h2><p>We will use MLUtils to generate 500 (noisy) clockwise and 500 (noisy) anticlockwise spirals. Using this data we will create a <code>MLUtils.DataLoader</code>. Our dataloader will give us sequences of size 2 × seq_len × batch_size and we need to predict a binary value whether the sequence is clockwise or anticlockwise.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_dataloaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; dataset_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sequence_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Create the spirals</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [MLUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Datasets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">make_spiral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sequence_length) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dataset_size]</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Get the labels</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vcat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], dataset_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">÷</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], dataset_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">÷</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clockwise_spirals </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reshape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequence_length], :, sequence_length, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                         for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dataset_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">÷</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    anticlockwise_spirals </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reshape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                 d[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][:, (sequence_length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], :, sequence_length, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data[((dataset_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">÷</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clockwise_spirals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, anticlockwise_spirals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Split the dataset</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (x_train, y_train), (x_val, y_val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> splitobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((x_data, labels); at</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, shuffle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Create DataLoaders</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Use DataLoader to automatically minibatch and shuffle the data</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        DataLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.((x_train, y_train)); batchsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, shuffle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Don&#39;t shuffle the validation data</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        DataLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.((x_val, y_val)); batchsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, shuffle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>get_dataloaders (generic function with 1 method)</span></span></code></pre></div><h2 id="Creating-a-Classifier" tabindex="-1">Creating a Classifier <a class="header-anchor" href="#Creating-a-Classifier" aria-label="Permalink to &quot;Creating a Classifier {#Creating-a-Classifier}&quot;">​</a></h2><p>We will be extending the <code>Lux.AbstractExplicitContainerLayer</code> type for our custom model since it will contain a lstm block and a classifier head.</p><p>We pass the fieldnames <code>lstm_cell</code> and <code>classifier</code> to the type to ensure that the parameters and states are automatically populated and we don&#39;t have to define <code>Lux.initialparameters</code> and <code>Lux.initialstates</code>.</p><p>To understand more about container layers, please look at <a href="/previews/PR583/manual/interface#Container-Layer">Container Layer</a>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpiralClassifier{L, C} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractExplicitContainerLayer{(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:lstm_cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:classifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lstm_cell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">L</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    classifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">C</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>We won&#39;t define the model from scratch but rather use the <a href="/previews/PR583/api/Lux/layers#Lux.LSTMCell"><code>Lux.LSTMCell</code></a> and <a href="/previews/PR583/api/Lux/layers#Lux.Dense"><code>Lux.Dense</code></a>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SpiralClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in_dims, hidden_dims, out_dims)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpiralClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        LSTMCell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in_dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hidden_dims), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hidden_dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> out_dims, sigmoid))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Main.var&quot;##225&quot;.SpiralClassifier</span></span></code></pre></div><p>We can use default Lux blocks – <code>Recurrence(LSTMCell(in_dims =&gt; hidden_dims)</code> – instead of defining the following. But let&#39;s still do it for the sake of it.</p><p>Now we need to define the behavior of the Classifier when it is invoked.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpiralClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{T, 3}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, st</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T}</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # First we will have to run the sequence through the LSTM Cell</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The first call to LSTM Cell will create the initial hidden state</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # See that the parameters and states are automatically populated into a field called</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # `lstm_cell` We use `eachslice` to get the elements in the sequence without copying,</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # and `Iterators.peel` to split out the first element for LSTM initialization.</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x_init, x_rest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Iterators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_eachslice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (y, carry), st_lstm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lstm_cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_init, ps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lstm_cell, st</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lstm_cell)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Now that we have the hidden state and memory in `carry` we will pass the input and</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # `carry` jointly</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x_rest</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        (y, carry), st_lstm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lstm_cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((x, carry), ps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lstm_cell, st_lstm)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # After running through the sequence we will pass the output through the classifier</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y, st_classifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, ps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">classifier, st</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">classifier)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Finally remember to create the updated state</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(st, (classifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st_classifier, lstm_cell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st_lstm))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y), st</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="Using-the-@compact-API" tabindex="-1">Using the <code>@compact</code> API <a class="header-anchor" href="#Using-the-@compact-API" aria-label="Permalink to &quot;Using the `@compact` API {#Using-the-@compact-API}&quot;">​</a></h2><p>We can also define the model using the <a href="/previews/PR583/api/Lux/utilities#Lux.@compact"><code>Lux.@compact</code></a> API, which is a more concise way of defining models. This macro automatically handles the boilerplate code for you and as such we recommend this way of defining custom layers</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SpiralClassifierCompact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in_dims, hidden_dims, out_dims)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lstm_cell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LSTMCell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in_dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hidden_dims)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    classifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hidden_dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> out_dims, sigmoid)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @compact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; lstm_cell, classifier) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{T, 3}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x_init, x_rest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Iterators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_eachslice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        y, carry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lstm_cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_init)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x_rest</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            y, carry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lstm_cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((x, carry))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SpiralClassifierCompact (generic function with 1 method)</span></span></code></pre></div><h2 id="Defining-Accuracy,-Loss-and-Optimiser" tabindex="-1">Defining Accuracy, Loss and Optimiser <a class="header-anchor" href="#Defining-Accuracy,-Loss-and-Optimiser" aria-label="Permalink to &quot;Defining Accuracy, Loss and Optimiser {#Defining-Accuracy,-Loss-and-Optimiser}&quot;">​</a></h2><p>Now let&#39;s define the binarycrossentropy loss. Typically it is recommended to use <code>logitbinarycrossentropy</code> since it is more numerically stable, but for the sake of simplicity we will use <code>binarycrossentropy</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xlogy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ifelse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iszero</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zero</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result), result)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> binarycrossentropy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred, y_true)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y_pred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y_pred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eltype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlogy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_true, y_pred) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xlogy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y_true, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y_pred))</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compute_loss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, ps, st, (x, y))</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y_pred, st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, ps, st)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> binarycrossentropy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred, y), st, (; y_pred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y_pred)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred, y_true) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((y_pred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y_true)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">accuracy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred, y_true) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> matches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred, y_true) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y_pred)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>accuracy (generic function with 1 method)</span></span></code></pre></div><h2 id="Training-the-Model" tabindex="-1">Training the Model <a class="header-anchor" href="#Training-the-Model" aria-label="Permalink to &quot;Training the Model {#Training-the-Model}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_type)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Get the dataloaders</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (train_loader, val_loader) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_dataloaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Create the model</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> model_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Xoshiro</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dev </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> gpu_device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    train_state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Experimental</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrainState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rng, model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Adam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); transform_variables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dev)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> epoch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Train the model</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> train_loader</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dev</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            gs, loss, _, train_state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Experimental</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compute_gradients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                AutoZygote</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), compute_loss, (x, y), train_state)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            train_state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Experimental</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply_gradients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(train_state, gs)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            @printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Epoch [%3d]: Loss %4.5f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> epoch loss</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Validate the model</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        st_ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">testmode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(train_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">states)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val_loader</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dev</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dev</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            loss, st_, ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> compute_loss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, train_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parameters, st_, (x, y))</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            acc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> accuracy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y_pred, y)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            @printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Validation: Loss %4.5f Accuracy %4.5f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loss acc</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (train_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parameters, train_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">states) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cpu_device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps_trained, st_trained </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SpiralClassifier)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Epoch [  1]: Loss 0.56048</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.50396</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.47451</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.44922</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.43200</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.40799</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.37900</span></span>\n<span class="line"><span>Validation: Loss 0.37465 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.37531 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.36570</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.35253</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.32735</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.31481</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.30523</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.29015</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.26360</span></span>\n<span class="line"><span>Validation: Loss 0.26174 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.26216 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.26307</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.23955</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.23291</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.22389</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.20863</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.19673</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.18527</span></span>\n<span class="line"><span>Validation: Loss 0.18187 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.18212 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.18207</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.16817</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.16509</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.15515</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.14732</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.13859</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.13643</span></span>\n<span class="line"><span>Validation: Loss 0.12955 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.12973 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.13002</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.12196</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.11645</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.11270</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.10480</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.10060</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.09903</span></span>\n<span class="line"><span>Validation: Loss 0.09435 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.09449 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.09141</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08856</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08477</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08297</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07658</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07698</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07346</span></span>\n<span class="line"><span>Validation: Loss 0.06994 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.07004 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06890</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06616</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06264</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06100</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05725</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05507</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05618</span></span>\n<span class="line"><span>Validation: Loss 0.05241 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.05249 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.05092</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04941</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04663</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04451</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04443</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04237</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.03896</span></span>\n<span class="line"><span>Validation: Loss 0.03961 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.03967 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03820</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03696</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03526</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03411</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03155</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03380</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03020</span></span>\n<span class="line"><span>Validation: Loss 0.03039 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.03046 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02868</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02819</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02817</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02641</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02481</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02529</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02340</span></span>\n<span class="line"><span>Validation: Loss 0.02396 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.02404 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02353</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02149</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02213</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02066</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02139</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.01947</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.01780</span></span>\n<span class="line"><span>Validation: Loss 0.01954 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01960 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01966</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01726</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01780</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01690</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01757</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01676</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01445</span></span>\n<span class="line"><span>Validation: Loss 0.01643 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01650 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01522</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01497</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01499</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01509</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01477</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01460</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01326</span></span>\n<span class="line"><span>Validation: Loss 0.01421 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01426 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01433</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01330</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01293</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01296</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01235</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01251</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01054</span></span>\n<span class="line"><span>Validation: Loss 0.01252 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01257 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01205</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01285</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01120</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01083</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01164</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01057</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01066</span></span>\n<span class="line"><span>Validation: Loss 0.01121 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01125 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01028</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01040</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01122</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01058</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.00987</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.00982</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.00933</span></span>\n<span class="line"><span>Validation: Loss 0.01015 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01019 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00978</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00953</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00984</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00959</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00816</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00928</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00956</span></span>\n<span class="line"><span>Validation: Loss 0.00926 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00930 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00874</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00884</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00838</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00874</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00865</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00814</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00826</span></span>\n<span class="line"><span>Validation: Loss 0.00851 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00854 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00834</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00833</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00773</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00771</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00800</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00728</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00765</span></span>\n<span class="line"><span>Validation: Loss 0.00786 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00789 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00723</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00777</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00731</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00734</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00688</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00729</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00713</span></span>\n<span class="line"><span>Validation: Loss 0.00729 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00733 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00661</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00701</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00681</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00707</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00669</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00679</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00563</span></span>\n<span class="line"><span>Validation: Loss 0.00680 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00683 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00650</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00613</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00627</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00642</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00661</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00607</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00622</span></span>\n<span class="line"><span>Validation: Loss 0.00636 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00639 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00584</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00575</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00659</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00584</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00572</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00604</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00509</span></span>\n<span class="line"><span>Validation: Loss 0.00597 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00600 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00582</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00583</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00593</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00546</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00517</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00512</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00593</span></span>\n<span class="line"><span>Validation: Loss 0.00562 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00564 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00560</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00548</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00504</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00548</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00481</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00519</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00468</span></span>\n<span class="line"><span>Validation: Loss 0.00530 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00532 Accuracy 1.00000</span></span></code></pre></div><p>We can also train the compact model with the exact same code!</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps_trained2, st_trained2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SpiralClassifierCompact)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Epoch [  1]: Loss 0.56201</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.50690</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.48206</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.44299</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.42094</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.41172</span></span>\n<span class="line"><span>Epoch [  1]: Loss 0.39229</span></span>\n<span class="line"><span>Validation: Loss 0.37092 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.36922 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.38107</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.35181</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.33307</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.31401</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.30011</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.28267</span></span>\n<span class="line"><span>Epoch [  2]: Loss 0.26351</span></span>\n<span class="line"><span>Validation: Loss 0.25963 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.25880 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.26225</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.24509</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.22904</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.22055</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.21098</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.19883</span></span>\n<span class="line"><span>Epoch [  3]: Loss 0.18768</span></span>\n<span class="line"><span>Validation: Loss 0.18106 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.18067 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.17912</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.17265</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.16160</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.15549</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.14774</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.14194</span></span>\n<span class="line"><span>Epoch [  4]: Loss 0.13581</span></span>\n<span class="line"><span>Validation: Loss 0.12908 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.12883 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.12843</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.12357</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.11675</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.11180</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.10676</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.10206</span></span>\n<span class="line"><span>Epoch [  5]: Loss 0.09564</span></span>\n<span class="line"><span>Validation: Loss 0.09394 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.09368 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.09387</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08866</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08593</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.08126</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07887</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07534</span></span>\n<span class="line"><span>Epoch [  6]: Loss 0.07036</span></span>\n<span class="line"><span>Validation: Loss 0.06946 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.06915 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06761</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06676</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06458</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.06107</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05699</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05710</span></span>\n<span class="line"><span>Epoch [  7]: Loss 0.05041</span></span>\n<span class="line"><span>Validation: Loss 0.05198 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.05163 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.05282</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04858</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04592</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04719</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04322</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04151</span></span>\n<span class="line"><span>Epoch [  8]: Loss 0.04139</span></span>\n<span class="line"><span>Validation: Loss 0.03924 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.03888 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03826</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03678</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03700</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03497</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03295</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.03195</span></span>\n<span class="line"><span>Epoch [  9]: Loss 0.02869</span></span>\n<span class="line"><span>Validation: Loss 0.03007 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.02974 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02866</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02816</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02806</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02751</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02533</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02577</span></span>\n<span class="line"><span>Epoch [ 10]: Loss 0.02233</span></span>\n<span class="line"><span>Validation: Loss 0.02371 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.02341 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02247</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02262</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02212</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02118</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.02202</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.01958</span></span>\n<span class="line"><span>Epoch [ 11]: Loss 0.01907</span></span>\n<span class="line"><span>Validation: Loss 0.01933 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01908 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01962</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01931</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01778</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01745</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01673</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01583</span></span>\n<span class="line"><span>Epoch [ 12]: Loss 0.01778</span></span>\n<span class="line"><span>Validation: Loss 0.01625 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01604 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01623</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01542</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01551</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01458</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01453</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01427</span></span>\n<span class="line"><span>Epoch [ 13]: Loss 0.01487</span></span>\n<span class="line"><span>Validation: Loss 0.01402 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01384 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01398</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01363</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01393</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01317</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01225</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01215</span></span>\n<span class="line"><span>Epoch [ 14]: Loss 0.01168</span></span>\n<span class="line"><span>Validation: Loss 0.01235 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01219 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01266</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01160</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01269</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01115</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01124</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01075</span></span>\n<span class="line"><span>Epoch [ 15]: Loss 0.01038</span></span>\n<span class="line"><span>Validation: Loss 0.01104 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.01090 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01088</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01110</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01062</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.00957</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01034</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.01033</span></span>\n<span class="line"><span>Epoch [ 16]: Loss 0.00973</span></span>\n<span class="line"><span>Validation: Loss 0.00999 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00987 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00941</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00865</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00988</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.01014</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00960</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.00899</span></span>\n<span class="line"><span>Epoch [ 17]: Loss 0.01022</span></span>\n<span class="line"><span>Validation: Loss 0.00912 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00901 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00834</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00919</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00876</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00884</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00848</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00812</span></span>\n<span class="line"><span>Epoch [ 18]: Loss 0.00990</span></span>\n<span class="line"><span>Validation: Loss 0.00838 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00827 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00806</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00838</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00819</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00807</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00770</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00784</span></span>\n<span class="line"><span>Epoch [ 19]: Loss 0.00658</span></span>\n<span class="line"><span>Validation: Loss 0.00773 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00763 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00750</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00731</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00763</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00697</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00775</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00719</span></span>\n<span class="line"><span>Epoch [ 20]: Loss 0.00709</span></span>\n<span class="line"><span>Validation: Loss 0.00718 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00709 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00653</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00687</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00645</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00715</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00714</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00709</span></span>\n<span class="line"><span>Epoch [ 21]: Loss 0.00647</span></span>\n<span class="line"><span>Validation: Loss 0.00669 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00660 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00659</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00603</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00650</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00658</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00644</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00613</span></span>\n<span class="line"><span>Epoch [ 22]: Loss 0.00696</span></span>\n<span class="line"><span>Validation: Loss 0.00626 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00618 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00610</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00596</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00654</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00595</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00538</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00617</span></span>\n<span class="line"><span>Epoch [ 23]: Loss 0.00546</span></span>\n<span class="line"><span>Validation: Loss 0.00587 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00579 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00623</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00573</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00549</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00583</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00545</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00526</span></span>\n<span class="line"><span>Epoch [ 24]: Loss 0.00478</span></span>\n<span class="line"><span>Validation: Loss 0.00552 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00545 Accuracy 1.00000</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00535</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00543</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00563</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00520</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00521</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00511</span></span>\n<span class="line"><span>Epoch [ 25]: Loss 0.00486</span></span>\n<span class="line"><span>Validation: Loss 0.00521 Accuracy 1.00000</span></span>\n<span class="line"><span>Validation: Loss 0.00514 Accuracy 1.00000</span></span></code></pre></div><h2 id="Saving-the-Model" tabindex="-1">Saving the Model <a class="header-anchor" href="#Saving-the-Model" aria-label="Permalink to &quot;Saving the Model {#Saving-the-Model}&quot;">​</a></h2><p>We can save the model using JLD2 (and any other serialization library of your choice) Note that we transfer the model to CPU before saving. Additionally, we recommend that you don&#39;t save the model</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;trained_model.jld2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {compress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} ps_trained st_trained</span></span></code></pre></div><p>Let&#39;s try loading the model</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;trained_model.jld2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps_trained st_trained</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>2-element Vector{Symbol}:</span></span>\n<span class="line"><span> :ps_trained</span></span>\n<span class="line"><span> :st_trained</span></span></code></pre></div><h2 id="Appendix" tabindex="-1">Appendix <a class="header-anchor" href="#Appendix" aria-label="Permalink to &quot;Appendix {#Appendix}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InteractiveUtils</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InteractiveUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">versioninfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @isdefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LuxCUDA) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CUDA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">functional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); CUDA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">versioninfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @isdefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LuxAMDGPU) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LuxAMDGPU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">functional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); AMDGPU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">versioninfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Julia Version 1.10.2</span></span>\n<span class="line"><span>Commit bd47eca2c8a (2024-03-01 10:14 UTC)</span></span>\n<span class="line"><span>Build Info:</span></span>\n<span class="line"><span>  Official https://julialang.org/ release</span></span>\n<span class="line"><span>Platform Info:</span></span>\n<span class="line"><span>  OS: Linux (x86_64-linux-gnu)</span></span>\n<span class="line"><span>  CPU: 48 × AMD EPYC 7402 24-Core Processor</span></span>\n<span class="line"><span>  WORD_SIZE: 64</span></span>\n<span class="line"><span>  LIBM: libopenlibm</span></span>\n<span class="line"><span>  LLVM: libLLVM-15.0.7 (ORCJIT, znver2)</span></span>\n<span class="line"><span>Threads: 6 default, 0 interactive, 3 GC (on 2 virtual cores)</span></span>\n<span class="line"><span>Environment:</span></span>\n<span class="line"><span>  LD_LIBRARY_PATH = /usr/local/nvidia/lib:/usr/local/nvidia/lib64</span></span>\n<span class="line"><span>  JULIA_DEPOT_PATH = /root/.cache/julia-buildkite-plugin/depots/01872db4-8c79-43af-ab7d-12abac4f24f6</span></span>\n<span class="line"><span>  JULIA_PROJECT = /var/lib/buildkite-agent/builds/gpuci-1/julialang/lux-dot-jl/docs</span></span>\n<span class="line"><span>  JULIA_AMDGPU_LOGGING_ENABLED = true</span></span>\n<span class="line"><span>  JULIA_DEBUG = Literate</span></span>\n<span class="line"><span>  JULIA_CPU_THREADS = 2</span></span>\n<span class="line"><span>  JULIA_NUM_THREADS = 6</span></span>\n<span class="line"><span>  JULIA_LOAD_PATH = @:@v#.#:@stdlib</span></span>\n<span class="line"><span>  JULIA_CUDA_HARD_MEMORY_LIMIT = 25%</span></span>\n<span class="line"><span>  JULIA_PKG_PRECOMPILE_AUTO = 0</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>CUDA runtime 12.4, artifact installation</span></span>\n<span class="line"><span>CUDA driver 12.4</span></span>\n<span class="line"><span>NVIDIA driver 550.54.15</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>CUDA libraries: </span></span>\n<span class="line"><span>- CUBLAS: 12.4.5</span></span>\n<span class="line"><span>- CURAND: 10.3.5</span></span>\n<span class="line"><span>- CUFFT: 11.2.1</span></span>\n<span class="line"><span>- CUSOLVER: 11.6.1</span></span>\n<span class="line"><span>- CUSPARSE: 12.3.1</span></span>\n<span class="line"><span>- CUPTI: 22.0.0</span></span>\n<span class="line"><span>- NVML: 12.0.0+550.54.15</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Julia packages: </span></span>\n<span class="line"><span>- CUDA: 5.3.3</span></span>\n<span class="line"><span>- CUDA_Driver_jll: 0.8.1+0</span></span>\n<span class="line"><span>- CUDA_Runtime_jll: 0.12.1+0</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Toolchain:</span></span>\n<span class="line"><span>- Julia: 1.10.2</span></span>\n<span class="line"><span>- LLVM: 15.0.7</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Environment:</span></span>\n<span class="line"><span>- JULIA_CUDA_HARD_MEMORY_LIMIT: 25%</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>1 device:</span></span>\n<span class="line"><span>  0: NVIDIA A100-PCIE-40GB MIG 1g.5gb (sm_80, 4.207 GiB / 4.750 GiB available)</span></span>\n<span class="line"><span>┌ Warning: LuxAMDGPU is loaded but the AMDGPU is not functional.</span></span>\n<span class="line"><span>└ @ LuxAMDGPU ~/.cache/julia-buildkite-plugin/depots/01872db4-8c79-43af-ab7d-12abac4f24f6/packages/LuxAMDGPU/sGa0S/src/LuxAMDGPU.jl:19</span></span></code></pre></div><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>', 45);
const _hoisted_46 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_46);
}
const _3_SimpleRNN = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  _3_SimpleRNN as default
};
